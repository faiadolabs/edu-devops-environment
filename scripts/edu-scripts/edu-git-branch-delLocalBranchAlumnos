#!/bin/bash
source $(dirname "$0")/lib/git_functions.sh

# TODO: Documentarlo: Especifica el nombre de la rama del alumno LOCAL a ARCHIVAR 
# (puede haber varias ramas del alumno pero se forman de la misma manera con sufijos) 
PARAM_BRANCH_DELETE=$1

# Se comprueba que existe repo git en path actual
is_git_basedir
if [ "$?" -ne "0" ]; then
	exit 1
fi

# Obtener fichero de alumnos
# IMPROVE: Si el fichero de alumnos no existe, sigiere los disponibles y automatiza la copia
exist_file_alumnos
if [ "$?" -ne "0" ]; then
	exit 1
fi
fileAlumnos=.git/alumnos

while read username bitbucketAccount prefijoName sufijoRepo
do
    # Hacer un trim de las cadenas (https://stackoverflow.com/a/19347380/1820838)
    username=${username//[$'\t\r\n']}
    bitbucketAccount=${bitbucketAccount//[$'\t\r\n']}
    prefijoName=${prefijoName//[$'\t\r\n']}

	if [ "$#" == 1 ]; then
		# Crea un nombre para la rama LOCAL y la trackea si no existe
		branchLocalName="$(echo $prefijoName'rb'-$username'-'$PARAM_BRANCH_DELETE)"
	else
		# Conforma el nombre (ESTANDAR) de las ramas locales
		branchLocalName="$(echo $prefijoName'rb'-$username)"
	fi

	# hago el push efectivo
	git branch -D $branchLocalName >/dev/null 2>&1
	CODE_PUSH=$? # recupero la salida del fetch

	if [ "$CODE_PUSH" == 0 ]; then
		# Correcto
		# LINEA="$(echo -e $OUTPUT | sed -n '2p')"
		echo -ne "\033[32m[DELETED]\033[0m\tgit branch -D $branchLocalName\n"

		# Crea una rama LOCAL y la trackea si no existe
		git branch -t $branchLocalName $prefijoName$username/$branchRemoteName >/dev/null 2>&1
		#echo "branch -t $branchLocalName $prefijoName$username/$branchRemoteName"
	else
		# Error
		echo -ne "\033[91m[FAILED]\033[0m\tgit branch -D $branchLocalName\n" 
	fi
	
done < "$fileAlumnos"

exit 0