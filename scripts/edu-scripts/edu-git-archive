#!/bin/bash
source $(dirname "$0")/lib/git_functions.sh

# TODO: Documentarlo: Especifica el nombre de la rama del alumno LOCAL a ARCHIVAR 
# (puede haber varias ramas del alumno pero se forman de la misma manera con sufijos) 
PARAM_BRANCH_ARCHIVE=$1

# Se comprueba que existe repo git en path actual
is_git_basedir
if [ "$?" -ne "0" ]; then
	exit 1
fi

# Obtener fichero de alumnos
# IMPROVE: Si el fichero de alumnos no existe, sigiere los disponibles y automatiza la copia
exist_file_alumnos
if [ "$?" -ne "0" ]; then
	exit 1
fi
fileAlumnos=.git/alumnos

while read username bitbucketAccount prefijoName sufijoRepo
do
    # Hacer un trim de las cadenas (https://stackoverflow.com/a/19347380/1820838)
    username=${username//[$'\t\r\n']}
    bitbucketAccount=${bitbucketAccount//[$'\t\r\n']}
    prefijoName=${prefijoName//[$'\t\r\n']}

	if [ "$#" == 1 ]; then
		# Crea un nombre para la rama LOCAL y la trackea si no existe
		branch_in_repo_alumno="$(echo $PARAM_BRANCH_ARCHIVE)"
		branchRemoteName="$(echo $prefijoName'rb'-$username'-'$PARAM_BRANCH_ARCHIVE)"
	else
		# Conforma el nombre (ESTANDAR) de las ramas locales
		branch_in_repo_alumno="$(echo 'rb'-$username)"
		branchRemoteName="$(echo $prefijoName'rb'-$username)"
	fi

	# Obtengo su Ãºltima referencia en su repositorio remoto de la rama a archivar
	git fetch -v $prefijoName$username $branch_in_repo_alumno

	# hago el push efectivo en el archivo
	git push archive $prefijoName$username/$branch_in_repo_alumno:refs/heads/$branchRemoteName >/dev/null 2>&1
	CODE_PUSH=$? # recupero la salida del fetch

	if [ "$CODE_PUSH" == 0 ]; then
		# Correcto
		echo -ne "\033[32m[ARCHIVED]\033[0m\tgit push archive $prefijoName$username/$branch_in_repo_alumno:refs/heads/$branchRemoteName\n"
	else
		# Error
		echo -ne "\033[91m[FAILED]\033[0m\tgit push archive $prefijoName$username/$branch_in_repo_alumno:refs/heads/$branchRemoteName\n" 
	fi
	
done < "$fileAlumnos"

exit 0
